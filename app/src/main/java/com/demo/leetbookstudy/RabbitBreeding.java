package com.demo.leetbookstudy;

/**
 *  兔子繁殖问题
 *  有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？
 *  兔子繁殖问题
 *
 * 问题描述
 *
 * 著名意大利数学家Fibonacci曾提出这样一个问题，说是：有一对兔子，从出生后第3个月起每月都生一对小兔子，小兔子长到第3个月后每个月又生一对小兔子，按此规律，假设兔子没有死亡，第一个月有一对刚出生的小兔子，问第n个月有多少对兔子？
 *
 * 问题分析
 *
 * 对于这类问题，如果仅凭脑子思考，想不明白的话，可以通过模拟兔子生小兔子列式子的方式来做，找出其中的规律
 *
 * (编程就是通过找题目中的规律，然后抽象，使得可以用通用方式来表达，再将这种通用方式写成某种语言的形式)
 *  单位： 对
 * 第1个月：1
 *
 * 第2个月：1
 *
 * 第3个月：1+1=2(第1个数1表示原来的兔子，第2个数1表示生的小兔子)
 *
 * 第4个月：2+1=3(第1个数2表示上个月的兔子数，第2个数1表示一开始的兔子又生了一对小兔子)
 *
 * 第5个月：3+2=5(第1个数3表示上个月的兔子数，第2个数2表示一开始的老兔子又生了一对小兔子+老兔子的孩子生的一对小兔子，其实就是上上个月的兔子数，上上个月有几对兔子，就会再生几对小兔子)
 *
 * 第6个月：5+3=8
 *
 * 第7个月：8+5=13
 *
 * 由上面的分析可以得到一个规律，就是目前的兔子对数，就是上个月的兔子数+上上个月的兔子数
 * 从第三个月起，本月兔子总数为前两个月的总数之和(斐波那契数列)
 * 1. f(n) = f(n-1) + f(n-2)，n>2
 * 2. 1 ，n<=2
 *
 * (其实这个规则，通过数字1 1 2 3 5 8 13….的规律也可以看出来，这就是著名的斐波那契数列。)
 * https://blog.csdn.net/weixin_42520573/article/details/112542473?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-3&spm=1001.2101.3001.4242
 */
public class RabbitBreeding {



    public static void main(String[] args) {
        int m = 7000;
//        for (i=1;i<=20;i++){
//            System.out.println("兔子第"+m+"个月的总数为："+f(m)+"对");
            System.out.println("兔子第"+m+"个月的总数为："+allCount(m)+"对");
//        }
    }

    public static int allCount(int n){
        if (n == 0 || n ==1 ){
            return 1;
        }
        int a = 1, b = 1, sum;
        for (int i = 3; i <= n; i++) {
            sum = a+b;
            a= b;
            b = sum;
        }
        return b;
    }

    public static int f(int x){
        if (x==1 || x==2){
            return 1;
        }else{
            return f(x-1)+f(x-2);
        }
    }
}
